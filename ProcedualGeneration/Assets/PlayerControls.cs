//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""GamePlay"",
            ""id"": ""fecee17f-7eff-4d54-af0e-6b087f321f86"",
            ""actions"": [
                {
                    ""name"": ""leftRudder"",
                    ""type"": ""Button"",
                    ""id"": ""94b18dd0-b6cc-4d74-85c5-ff7992042b50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""rightRudder"",
                    ""type"": ""Button"",
                    ""id"": ""6d75389b-8376-4c50-b6eb-4b5971484606"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""accel"",
                    ""type"": ""Button"",
                    ""id"": ""ec95ec44-2920-4deb-aabf-5cc82e542f19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""deccel"",
                    ""type"": ""Button"",
                    ""id"": ""575cc71f-1644-433f-bd35-0f7d1453e3f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""steer"",
                    ""type"": ""Value"",
                    ""id"": ""7b1a8355-e3ac-41cc-8b1a-d0d57f2f12ed"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""camera"",
                    ""type"": ""Value"",
                    ""id"": ""a403a2f8-bb9c-4c48-93f5-4cf21d4f8304"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""resetCam"",
                    ""type"": ""Button"",
                    ""id"": ""9ab6878b-d14d-49f0-9227-e15dafab80d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""X"",
                    ""type"": ""Button"",
                    ""id"": ""67fef678-fe10-4e70-9db4-6af89a735c0b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""cfcd80b9-0445-4ca2-95e5-9fd07ba36f2c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Y"",
                    ""type"": ""Button"",
                    ""id"": ""8a48be8e-91a8-4270-baeb-ed7aa2872240"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B"",
                    ""type"": ""Button"",
                    ""id"": ""5134e0a0-6eb5-4a88-b67d-7f627a06bd68"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""60243c57-de55-4568-8d31-2618d80073c0"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""leftRudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c367638b-fd07-42a9-8d81-38661f6cd90c"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""rightRudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0956a07e-eade-43bb-a9ad-232b12fe7714"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""accel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e399360b-b0b4-4fd1-8972-c7855b175373"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""deccel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""171868f6-ed8a-4398-964c-649efc6949a5"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb686df6-9232-4c67-9b42-3fc12b103983"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b5d02fb-0f8a-4088-83e8-12bc0af318b8"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""resetCam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86448ad2-7af6-4c1f-b50d-29ba2e300fe4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""325b4991-faba-4200-8c4c-a2a9bbedb608"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a977198f-fef3-4cd4-a9ec-efd128c214e2"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0afa3d93-3ec6-4283-bf3b-4d68b1927a3a"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GamePlay
        m_GamePlay = asset.FindActionMap("GamePlay", throwIfNotFound: true);
        m_GamePlay_leftRudder = m_GamePlay.FindAction("leftRudder", throwIfNotFound: true);
        m_GamePlay_rightRudder = m_GamePlay.FindAction("rightRudder", throwIfNotFound: true);
        m_GamePlay_accel = m_GamePlay.FindAction("accel", throwIfNotFound: true);
        m_GamePlay_deccel = m_GamePlay.FindAction("deccel", throwIfNotFound: true);
        m_GamePlay_steer = m_GamePlay.FindAction("steer", throwIfNotFound: true);
        m_GamePlay_camera = m_GamePlay.FindAction("camera", throwIfNotFound: true);
        m_GamePlay_resetCam = m_GamePlay.FindAction("resetCam", throwIfNotFound: true);
        m_GamePlay_X = m_GamePlay.FindAction("X", throwIfNotFound: true);
        m_GamePlay_A = m_GamePlay.FindAction("A", throwIfNotFound: true);
        m_GamePlay_Y = m_GamePlay.FindAction("Y", throwIfNotFound: true);
        m_GamePlay_B = m_GamePlay.FindAction("B", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GamePlay
    private readonly InputActionMap m_GamePlay;
    private List<IGamePlayActions> m_GamePlayActionsCallbackInterfaces = new List<IGamePlayActions>();
    private readonly InputAction m_GamePlay_leftRudder;
    private readonly InputAction m_GamePlay_rightRudder;
    private readonly InputAction m_GamePlay_accel;
    private readonly InputAction m_GamePlay_deccel;
    private readonly InputAction m_GamePlay_steer;
    private readonly InputAction m_GamePlay_camera;
    private readonly InputAction m_GamePlay_resetCam;
    private readonly InputAction m_GamePlay_X;
    private readonly InputAction m_GamePlay_A;
    private readonly InputAction m_GamePlay_Y;
    private readonly InputAction m_GamePlay_B;
    public struct GamePlayActions
    {
        private @PlayerControls m_Wrapper;
        public GamePlayActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @leftRudder => m_Wrapper.m_GamePlay_leftRudder;
        public InputAction @rightRudder => m_Wrapper.m_GamePlay_rightRudder;
        public InputAction @accel => m_Wrapper.m_GamePlay_accel;
        public InputAction @deccel => m_Wrapper.m_GamePlay_deccel;
        public InputAction @steer => m_Wrapper.m_GamePlay_steer;
        public InputAction @camera => m_Wrapper.m_GamePlay_camera;
        public InputAction @resetCam => m_Wrapper.m_GamePlay_resetCam;
        public InputAction @X => m_Wrapper.m_GamePlay_X;
        public InputAction @A => m_Wrapper.m_GamePlay_A;
        public InputAction @Y => m_Wrapper.m_GamePlay_Y;
        public InputAction @B => m_Wrapper.m_GamePlay_B;
        public InputActionMap Get() { return m_Wrapper.m_GamePlay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GamePlayActions set) { return set.Get(); }
        public void AddCallbacks(IGamePlayActions instance)
        {
            if (instance == null || m_Wrapper.m_GamePlayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GamePlayActionsCallbackInterfaces.Add(instance);
            @leftRudder.started += instance.OnLeftRudder;
            @leftRudder.performed += instance.OnLeftRudder;
            @leftRudder.canceled += instance.OnLeftRudder;
            @rightRudder.started += instance.OnRightRudder;
            @rightRudder.performed += instance.OnRightRudder;
            @rightRudder.canceled += instance.OnRightRudder;
            @accel.started += instance.OnAccel;
            @accel.performed += instance.OnAccel;
            @accel.canceled += instance.OnAccel;
            @deccel.started += instance.OnDeccel;
            @deccel.performed += instance.OnDeccel;
            @deccel.canceled += instance.OnDeccel;
            @steer.started += instance.OnSteer;
            @steer.performed += instance.OnSteer;
            @steer.canceled += instance.OnSteer;
            @camera.started += instance.OnCamera;
            @camera.performed += instance.OnCamera;
            @camera.canceled += instance.OnCamera;
            @resetCam.started += instance.OnResetCam;
            @resetCam.performed += instance.OnResetCam;
            @resetCam.canceled += instance.OnResetCam;
            @X.started += instance.OnX;
            @X.performed += instance.OnX;
            @X.canceled += instance.OnX;
            @A.started += instance.OnA;
            @A.performed += instance.OnA;
            @A.canceled += instance.OnA;
            @Y.started += instance.OnY;
            @Y.performed += instance.OnY;
            @Y.canceled += instance.OnY;
            @B.started += instance.OnB;
            @B.performed += instance.OnB;
            @B.canceled += instance.OnB;
        }

        private void UnregisterCallbacks(IGamePlayActions instance)
        {
            @leftRudder.started -= instance.OnLeftRudder;
            @leftRudder.performed -= instance.OnLeftRudder;
            @leftRudder.canceled -= instance.OnLeftRudder;
            @rightRudder.started -= instance.OnRightRudder;
            @rightRudder.performed -= instance.OnRightRudder;
            @rightRudder.canceled -= instance.OnRightRudder;
            @accel.started -= instance.OnAccel;
            @accel.performed -= instance.OnAccel;
            @accel.canceled -= instance.OnAccel;
            @deccel.started -= instance.OnDeccel;
            @deccel.performed -= instance.OnDeccel;
            @deccel.canceled -= instance.OnDeccel;
            @steer.started -= instance.OnSteer;
            @steer.performed -= instance.OnSteer;
            @steer.canceled -= instance.OnSteer;
            @camera.started -= instance.OnCamera;
            @camera.performed -= instance.OnCamera;
            @camera.canceled -= instance.OnCamera;
            @resetCam.started -= instance.OnResetCam;
            @resetCam.performed -= instance.OnResetCam;
            @resetCam.canceled -= instance.OnResetCam;
            @X.started -= instance.OnX;
            @X.performed -= instance.OnX;
            @X.canceled -= instance.OnX;
            @A.started -= instance.OnA;
            @A.performed -= instance.OnA;
            @A.canceled -= instance.OnA;
            @Y.started -= instance.OnY;
            @Y.performed -= instance.OnY;
            @Y.canceled -= instance.OnY;
            @B.started -= instance.OnB;
            @B.performed -= instance.OnB;
            @B.canceled -= instance.OnB;
        }

        public void RemoveCallbacks(IGamePlayActions instance)
        {
            if (m_Wrapper.m_GamePlayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGamePlayActions instance)
        {
            foreach (var item in m_Wrapper.m_GamePlayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GamePlayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GamePlayActions @GamePlay => new GamePlayActions(this);
    public interface IGamePlayActions
    {
        void OnLeftRudder(InputAction.CallbackContext context);
        void OnRightRudder(InputAction.CallbackContext context);
        void OnAccel(InputAction.CallbackContext context);
        void OnDeccel(InputAction.CallbackContext context);
        void OnSteer(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnResetCam(InputAction.CallbackContext context);
        void OnX(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnY(InputAction.CallbackContext context);
        void OnB(InputAction.CallbackContext context);
    }
}
